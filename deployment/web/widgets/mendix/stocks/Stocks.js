define(['exports', 'react'], (function (exports, React) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

    const api = {
      key: "783aaba01dmsh4d6258e9276ffdap1f8f29jsnbed481b82bab",
      host: "real-time-finance-data.p.rapidapi.com"
    };
    function HelloWorldSample({
      sampleText
    }) {
      const [search, setSearch] = React.useState("");
      const [timeline, setTimeLine] = React.useState("");
      const [period, setPeriod] = React.useState({});
      const searchPressed = () => {
        fetch(`https://real-time-finance-data.p.rapidapi.com/stock-time-series-source-2?symbol=${search}&period=${timeline}`, {
          method: 'GET',
          headers: {
            'x-rapidapi-key': api.key,
            'x-rapidapi-host': api.host
          }
        }).then(res => res.json()).then(result => {
          setPeriod(result);
        }).catch(error => {
          console.error('Error fetching data:', error);
        });
      };
      return React.createElement(React__default["default"].Fragment, null, React.createElement("div", {
        className: "widget-wrapper"
      }, React.createElement("h2", null, sampleText), React.createElement("div", null, React.createElement("input", {
        className: "myInput",
        type: "text",
        placeholder: "Search here...",
        onChange: e => setSearch(e.target.value)
      }), React.createElement("input", {
        className: "myInput",
        type: "text",
        placeholder: "Duration",
        onChange: e => setTimeLine(e.target.value)
      }), React.createElement("button", {
        className: "mysearchbtn",
        onClick: searchPressed
      }, "Search")), period.data && React.createElement("div", {
        className: "period-info"
      }, React.createElement("p", {
        className: "myptag"
      }, "Symbol: ", period.data.symbol), React.createElement("p", {
        className: "myptag"
      }, "Price: ", period.data.price), React.createElement("p", {
        className: "myptag"
      }, "Exchange: ", period.data.exchange), React.createElement("p", {
        className: "myptag"
      }, "Type: ", period.data.type), React.createElement("p", {
        className: "myptag"
      }, "Day Low: ", period.data.day_low), React.createElement("p", {
        className: "myptag"
      }, "Day High: ", period.data.day_high), React.createElement("p", {
        className: "myptag"
      }, "Year Low: ", period.data.year_low), React.createElement("p", {
        className: "myptag"
      }, "Year High: ", period.data.year_high), React.createElement("p", {
        className: "myptag"
      }, "Currency: ", period.data.currency), React.createElement("p", {
        className: "myptag"
      }, "Volume: ", period.data.volume), React.createElement("p", {
        className: "myptag"
      }, "Previous Close: ", period.data.previous_close), React.createElement("p", {
        className: "myptag"
      }, "Change: ", period.data.change), React.createElement("p", {
        className: "myptag"
      }, "Change Percent: ", period.data.change_percent), React.createElement("p", {
        className: "myptag"
      }, "Timezone: ", period.data.exchange_timezone))));
    }

    function Stocks({
      sampleText
    }) {
      return React.createElement(HelloWorldSample, {
        sampleText: sampleText
      });
    }

    exports.Stocks = Stocks;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
